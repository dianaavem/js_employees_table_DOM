{"version":3,"sources":["scripts/main.js"],"names":["isValidData","editingCell","body","document","querySelector","thead","tbody","rows","nameLength","minAge","maxAge","timeoutOfMessage","compare","isCorrect","ascSorting","i","column","dsc","convertNumber","string","slice","split","join","sort","first","second","a","children","innerHTML","b","localeCompare","reverse","append","style","userSelect","addEventListener","e","th","target","closest","index","cellIndex","innerText","tr","forEach","row","removeAttribute","classList","add","form","createElement","showMessage","posTop","posRight","title","description","type","message","messageTitle","messageDescription","top","right","setAttribute","setTimeout","remove","validateData","data","get","trim","length","test","validate","cell","value","editEnd","td","isFine","firstChild","editStart","toLocaleString","currency","changeIsCorrect","element","cellOffice","className","focus","onblur","office","selectedIndex","onkeydown","enter","key","cellInput","FormData","dataSalary","inputSalary","salary","preventDefault","newRow","insertRow","insertCell","push","reset","input","parentElement"],"mappings":"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","file":"main.667faa68.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.rows];\nconst nameLength = 4;\nconst minAge = 18;\nconst maxAge = 90;\nconst timeoutOfMessage = 1000;\nlet compare = -1;\nlet isValidData;\nlet editingCell;\nlet isCorrect = true;\n\nbody.style.userSelect = 'none';\n\n// sorting of the table\n\nfunction ascSorting(i, column, dsc) {\n  function convertNumber(string) {\n    return +string.slice(1).split(',').join('');\n  }\n\n  rows.sort((first, second) => {\n    const a = first.children[i].innerHTML;\n    const b = second.children[i].innerHTML;\n\n    switch (column) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        return a.localeCompare(b);\n\n      case 'Age':\n        return a - b;\n\n      case 'Salary':\n        return convertNumber(a) - convertNumber(b);\n    }\n  });\n\n  if (dsc) {\n    rows.reverse();\n  }\n\n  tbody.append(...rows);\n}\n\nthead.addEventListener('click', e => {\n  const th = e.target.closest('th');\n  const index = th.cellIndex;\n\n  ascSorting(index, th.innerText, compare === index);\n\n  compare = (compare === index) ? -1 : index;\n});\n\n// select row\n\ntbody.addEventListener('click', e => {\n  const tr = e.target.closest('tr');\n\n  rows.forEach(row => {\n    row.removeAttribute('class');\n  });\n\n  tr.classList.add('active');\n});\n\n// create form and validate data\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label> Name:\n    <input type=\"text\" name = \"name\" data-qa=\"name\" required>\n  </label>\n  <label> Position:\n    <input type=\"text\" name = \"position\" data-qa=\"position\">\n  </label>\n  <label> Office:\n    <select name = \"office\" data-qa=\"office\" required>\n      <option value=\"\" selected disabled>Choose office</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label> Age:\n    <input type=\"number\" name = \"age\" data-qa=\"age\" required>\n  </label>\n  <label> Salary:\n    <input type=\"number\" name = \"salary\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nbody.append(form);\n\nfunction showMessage(posTop, posRight, title, description, type) {\n  const message = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  message.style.top = `${posTop}px`;\n  message.style.right = `${posRight}px`;\n\n  messageTitle.innerText = title;\n  messageDescription.innerText = description;\n\n  message.classList.add('notification', type);\n  message.setAttribute('data-qa', 'notification');\n  messageTitle.classList.add('title');\n\n  message.append(messageTitle, messageDescription);\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, timeoutOfMessage);\n};\n\nfunction validateData(data) {\n  if (data.get('name').trim().length < nameLength\n    || /\\d/.test(data.get('name'))) {\n    showMessage(\n      450, 10,\n      'ERROR',\n      'Name value has less than 4 letters or numbers!'\n    );\n\n    isValidData = false;\n  } else if (data.get('age') < minAge\n  || data.get('age') > maxAge) {\n    showMessage(\n      450, 10,\n      'ERROR',\n      'Age value is less than 18 or more than 90!'\n    );\n\n    isValidData = false;\n  } else {\n    isValidData = true;\n  }\n};\n\nform.addEventListener('submit', e => {\n  const data = new FormData(form);\n  const dataSalary = data.get('salary');\n  let inputSalary = dataSalary;\n\n  if (dataSalary.length > 3) {\n    inputSalary\n    = dataSalary.slice(0, -3)\n    + ','\n    + dataSalary.slice(-3, dataSalary.length);\n  }\n\n  const salary = `$${inputSalary}`;\n\n  e.preventDefault();\n  validateData(data);\n\n  if (!isValidData) {\n    return;\n  }\n\n  const newRow = tbody.insertRow();\n\n  newRow.insertCell(0).innerText = data.get('name');\n  newRow.insertCell(1).innerText = data.get('position');\n  newRow.insertCell(2).innerText = data.get('office');\n  newRow.insertCell(3).innerText = data.get('age');\n  newRow.insertCell(4).innerText = salary;\n\n  rows.push(newRow);\n\n  form.reset();\n\n  showMessage(\n    450, 10,\n    'SUCCESS!',\n    'New employee is successfully added to the table!');\n});\n\n// editing of table cells\n\nfunction validate(i, cell) {\n  switch (i) {\n    case 0:\n    case 1:\n      if (/\\d/.test(cell.value)\n        || cell.value.trim().length < nameLength) {\n        isCorrect = false;\n\n        showMessage(\n          450, 10,\n          'ERROR',\n          'Value has less than 4 letters or include numbers!');\n      }\n\n      break;\n\n    case 3:\n      if (cell.value < 18\n        || cell.value > 90) {\n        if (cell.value === '') {\n          isCorrect = false;\n\n          return;\n        }\n\n        isCorrect = false;\n\n        showMessage(\n          450, 10,\n          'ERROR',\n          'The age must be 18+ and less than 90.');\n      }\n\n      break;\n\n    case 4:\n      if (+cell.value <= 0) {\n        if (cell.value === '') {\n          isCorrect = false;\n\n          return;\n        }\n\n        isCorrect = false;\n\n        showMessage(\n          450, 10,\n          'ERROR',\n          'Salary must be more than 0!');\n      }\n\n      break;\n  }\n}\n\nfunction editEnd(td, isFine) {\n  if (isFine) {\n    switch (td.cellIndex) {\n      case 4:\n        td.innerHTML = `${(+td.firstChild.value)\n          .toLocaleString('en-US', {\n            style: 'currency',\n            currency: 'USD',\n          })\n          .slice(0, -3)}`;\n\n        showMessage(\n          450, 10,\n          'SUCCESS',\n          'Table was successfully changed!');\n        break;\n\n      case 0:\n      case 1:\n      case 3:\n        td.innerHTML = td.firstChild.value;\n\n        showMessage(\n          450, 10,\n          'SUCCESS',\n          'Table was successfully changed!');\n        break;\n    }\n  } else {\n    if (td.firstChild.value === '') {\n      td.innerHTML = editingCell.data;\n\n      return;\n    }\n\n    return editStart(td);\n  }\n\n  editingCell = null;\n};\n\nfunction changeIsCorrect() {\n  isCorrect = true;\n}\n\nfunction editStart(td) {\n  editingCell = {\n    element: td,\n    data: td.innerHTML,\n  };\n\n  if (td.cellIndex === 2) {\n    const cellOffice = document.createElement('select');\n\n    cellOffice.className = 'cell-input';\n\n    cellOffice.innerHTML = `\n      <option value=\"Choose office\" selected disabled>Choose office</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    `;\n\n    td.innerHTML = '';\n    td.append(cellOffice);\n    cellOffice.focus();\n\n    cellOffice.onblur = () => {\n      const office = cellOffice.selectedIndex;\n\n      td.innerHTML = cellOffice[office].value;\n\n      if (cellOffice.selectedIndex === 0) {\n        td.innerHTML = editingCell.data;\n      }\n\n      showMessage(\n        450, 10,\n        'SUCCESS',\n        'Table was successfully changed!');\n    };\n\n    cellOffice.onkeydown = (enter) => {\n      if (enter.key === 'Enter') {\n        cellOffice.onblur();\n      }\n    };\n  } else {\n    const cellInput = document.createElement('input');\n\n    cellInput.className = 'cell-input';\n    cellInput.innerHTML = td.innerHTML;\n    td.innerHTML = '';\n    td.append(cellInput);\n    cellInput.focus();\n\n    switch (td.cellIndex) {\n      case 0:\n      case 1:\n        cellInput.setAttribute('type', 'text');\n        break;\n\n      case 3:\n      case 4:\n        cellInput.setAttribute('type', 'number');\n        break;\n    }\n\n    cellInput.onblur = (e) => {\n      validate(td.cellIndex, cellInput);\n      editEnd(editingCell.element, isCorrect);\n      changeIsCorrect();\n    };\n\n    cellInput.onkeydown = (enter) => {\n      if (enter.key === 'Enter') {\n        cellInput.onblur();\n      }\n    };\n  }\n};\n\ntbody.addEventListener('dblclick', e => {\n  const target = e.target.closest('td');\n  const input = document.querySelector('.cell-input');\n\n  if (input) {\n    showMessage(\n      450, 10,\n      'ERROR',\n      'You must finished current cell!');\n\n    return editStart(input.parentElement);\n  }\n\n  if (!target) {\n    return;\n  }\n\n  editStart(target);\n});\n"]}